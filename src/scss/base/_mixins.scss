@mixin min_width_button($widht) {
    @include responsive-width($tablet_m){
        min-width: #{$widht}px;
        padding-left: 0;
        padding-right: 0;
    }
}
@mixin max-width-center($widht) {
  // @include responsive-width($tablet_m){
      max-width: #{$widht}px;
      margin-left: 0;
      margin-right: 0;
  // }
}


@mixin responsive-width($media) {
    @media only screen and (min-width: $media) {
        @content;
    }
}

@mixin responsive-max-width($media) {
    @media only screen and (max-width: $media) {
        @content;
    }
}

@mixin backgound_retina {
    @media (-webkit-min-device-pixel-ratio: 2),
    (min-resolution: 192dpi) {
        @content;
    }
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }

    &:-moz-placeholder {
        /* Firefox 18- */
        @content;
    }

    &::-moz-placeholder {
        /* Firefox 19+ */
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &::placeholder {
        @content;
    }
}

@function m_image_common_url($url) {
    @if function-exists(image-url) {
        @return image-url($url);
    }

    @else {
        @return url($m_image_common_path + $url);
    }
}

@function m_image_url($url) {
    @if function-exists(image-url) {
        @return image-url($url);
    }

    @else {
        @return url($m_image_path + $url);
    }
}

@mixin grid-table($alineacion:top) {
    display: table;
    width: 100%;
    height: 1px;

    >* {
        display: table-cell;
        vertical-align: $alineacion;
    }
}

@mixin inline-block-sin-espacios($size: $font-size-default, $align: top) {
    font-size: 0;
    letter-spacing: -1px;
    word-spacing: -1px;

    >* {
        font-size: $font-size-default;
        letter-spacing: $letter-spacing;
        white-space: normal;
        word-spacing: normal;
        display: inline-block;
        vertical-align: $align;
    }
}

@function add-class-modifier($class, $split: '--') {
    @return str-insert(nth(str-split(#{&}, $split), 1), $class, -1);
}

@function str-split($string, $separator) {
    $i: str-index($string, $separator);

    @if $i !=null {
        @return append(str-slice($string, 1, $i - 1),
            str-split(str-slice($string, $i + str-length($separator)), $separator));
    }

    @return $string
}